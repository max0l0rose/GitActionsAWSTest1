name: Deploy to Amazon ECS 1111
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab1
  workflow_dispatch:

#OKOKOKOK1111111

#  stty -ixon

#  ls -alt --time=ctime

#  list java processes:
#  ps -fC java
#  jps | grep GitActionsAWSTest1

# kill spec process
# kill -9 $(ps aux | grep java | grep Git | awk '{print $2}')


env:
  QQQ: WWW
  AWS_REGION: eu-central-1 #eu-west-3                   # set this to your preferred AWS region, e.g. us-west-1
  #ECR_REPOSITORY: AWSRepo1           # set this to your Amazon ECR repository name
  #ECS_SERVICE: MYECS_SERVICE                 # set this to your Amazon ECS service name
  #ECS_CLUSTER: MYECS_CLUSTER                 # set this to your Amazon ECS cluster name
##  ECS_TASK_DEFINITION: MYECSTASKDEFINITION # set this to the path to your Amazon ECS task definition
                                          # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: MYCONTAINERNAME           # set this to the name of the container in the
                                          # containerDefinitions section of your task definition

#  aws-access-key- id: AKIA4KFLILHHGLAMARH_D1
#  aws-access-key- id: AKIA53SLLDVA3ZVLLH7M # user2
#  aws-secret-access- key: x89WCIKCpc/1p0g5y0WHCg0ZZYtQAT7Zyo8KOmW_h1
#  aws-secret-access- key: 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 # user2

#  AWS_ACCESS_KEY_ ID: AKIA53SLLDVAXZ7ZS3GG # user1
#  AWS_SECRET_ACCESS_ KEY: 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 # user1

  BUCKET_NAME: gitactionsbucket1
  EB_APPNAME: gitactions-eb-app1
  PACK_NAME: GitActionsAWSTest1-0.0.1-SNAPSHOT.jar

#permissions:
#  contents: read

jobs:
#-------------------------------------------------------------------------------------
  bu_ild:
    runs-on: ubuntu-latest
    #continue-on-error: true
    if: false
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it1
      - uses: actions/checkout@v3

#      # Runs a single command using the runners shell
#      - name: === Run a one-line script
#        run: echo Hello, world!

#      # Runs a set of commands using the runners shell
#      - name: === Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
#          echo ----------------
#          echo github.workspace = ${{ github.workspace }}
#          echo github.run_number = ${{ github.run_number }}
#          echo ----------------
#          echo DOCKERHUB_USERNAME = ${{ secrets.DOCKERHUB_USERNAME }}
#          echo DOCKERHUB_TOKEN = ${{ secrets.DOCKERHUB_TOKEN }}
#          echo ----------------
#          ls ${{ github.workspace }}
#          echo ----------------


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        id: login1
        #continue-on-error: false
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1

      - name: Echo steps.login1.outcome
        run: |
          echo steps.login1.outcome = ${{steps.login1.outcome}}

      - name: Check login status
        if: steps.login1.outcome != 'success' #|| steps.world.outcome != 'success'
        run: |
          echo exiting... \
          exit 1

      - name: === Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11 #1.8

      - name: === mvn
        run: mvn package #-Dmaven.test.skip=true

##      - name: === Login to DockerHub Registry
##        run: echo 96c0ae44-9639-4728-8302-e1073a0fef12 | docker login -u softfavorite --password-stdin

      - name: === aws delete all files from s3 bucket 3
        continue-on-error: true
        run: aws s3 rm s3://${{ env.BUCKET_NAME }}/ --recursive # --exclude "*.jpg" --exclude "another/*"

      - name: === aws s3 delete bucket
        continue-on-error: true
        run: aws s3 rb s3://${{ env.BUCKET_NAME }} --force
#        run: aws s3api delete-bucket --bucket ${{ env.BUCKET_NAME }} --force #–region ${{ env.AWS_REGION }}

      - name: === aws s3 create bucket
        #if: always()
        run: aws s3 mb s3://${{ env.BUCKET_NAME }} #–region ${{ env.AWS_REGION }}


      - name: === aws s3 copy
#        continue-on-error: true
        #if: always()
        run: aws s3 cp target/${{env.PACK_NAME}} s3://${{ env.BUCKET_NAME }}

      - name: === LS
        run: ls


#-------------------------------------------------------------------------------------
  dep_loy:
    runs-on: ubuntu-latest
    needs: [bu_ild]
    if: always()
    steps:
      - name: === Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}


      - name: === AWS s3 cp s3 ===
        run: aws s3 cp s3://${{env.BUCKET_NAME}}/${{env.PACK_NAME}} ${{env.PACK_NAME}}

#  aws s3 cp s3://my/s3/path/ //my/ec2/path/ --exclude '*' --include '2014-01*' --recursive
      - name: === SSH ===
        env:
          DEV_ENV_FILE: ${{ secrets.BIGHALL }} #BIGHALL SSH_GEN_PRIV_KEY1 SECRET1
        run: |
          echo github.workspace = '${{ github.workspace }}'
          echo "pwd = $(pwd)"
          echo "-----BEGIN OPENSSH PRIVATE KEY-----" > aws_user1_key.pem
          echo $DEV_ENV_FILE | tr " " "\n" >> aws_user1_key.pem
          echo "-----END OPENSSH PRIVATE KEY-----" >> aws_user1_key.pem
          sudo chmod 600 aws_user1_key.pem
          ls ~ -ag
          echo ----- SSH -----
          sudo ssh -i aws_user1_key.pem -o ConnectTimeout=10 -o StrictHostKeyChecking=no ubuntu@3.71.112.247 -- "
            export;
            echo ---- echo ~/.aws/credentials ----
            echo '[default]
          AWS_ACCESS_KEY_ID = ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY = ${{ env.AWS_SECRET_ACCESS_KEY }}
          ' > ~/.aws/credentials
            echo ----------- aws s3 cp s3://${{env.BUCKET_NAME}}/${{env.PACK_NAME}} ~/Prjs -------------
            aws s3 cp s3://${{env.BUCKET_NAME}}/${{env.PACK_NAME}} ~/Prjs
            cd ~/Prjs
            echo --- jps ----
            jps
            echo \"--- ps aux | awk '!/bash/ && /${{env.PACK_NAME}}/ {print \"'\$2'\"}' ---\"
            ps aux | awk '!/bash/ && /${{env.PACK_NAME}}/ {print \$2}'
            echo \"---- kill -9 \"'\$'\"(ps aux | awk '!/bash/ && /${{env.PACK_NAME}}/ {print \"'\$2'\"}') ---\"
            kill -9 \$(ps aux | awk '!/bash/ && /${{env.PACK_NAME}}/ {print \$2}')
            set +x
            echo --- 'java -jar ${{env.PACK_NAME}} > out${{env.PACK_NAME}} 2> err${{env.PACK_NAME}} &' ---
            java -jar ${{env.PACK_NAME}} > out${{env.PACK_NAME}} 2> err${{env.PACK_NAME}} &
          "

#            set -x

#      - name: === delete elasticbeanstalk delete-application
##        continue-on-error: true
#        run : aws elasticbeanstalk delete-application --application-name ${{ env.EB_APPNAME }}
#
#      - name: === create elasticbeanstalk create-application
##        continue-on-error: true
#        #if: always()
#        run : aws elasticbeanstalk create-application --application-name ${{ env.EB_APPNAME }} --description "my application1"
#
#
#      - name: === create new elastic_beanstalk application version
##        continue-on-error: true
#        #if: always()
#        run : |
#            aws elasticbeanstalk create-application-version \
#            --application-name ${{ env.EB_APPNAME }} \
#            --source-bundle S3Bucket="${{ env.BUCKET_NAME }}",S3Key="${{env.PACK_NAME}}" \
#            --version-label "Ver-${{ github.sha }}" \
#            --description "Commit ${{ github.sha }}"
#
#      - name: === deploy aws elasticbeanstalk update-environment
#        run: |
#          aws elasticbeanstalk update-environment \
#          --environment-name ebapp1-env \
#          --version-label Ver-${{ github.sha }}


