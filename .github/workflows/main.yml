name: Deploy to Amazon ECS 1111
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab1
  workflow_dispatch:

#OKOKOKOK1111111

env:
  AWS_REGION: eu-central-1 #eu-west-3                   # set this to your preferred AWS region, e.g. us-west-1
  #ECR_REPOSITORY: AWSRepo1           # set this to your Amazon ECR repository name
  #ECS_SERVICE: MYECS_SERVICE                 # set this to your Amazon ECS service name
  #ECS_CLUSTER: MYECS_CLUSTER                 # set this to your Amazon ECS cluster name
##  ECS_TASK_DEFINITION: MYECSTASKDEFINITION # set this to the path to your Amazon ECS task definition
                                          # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: MYCONTAINERNAME           # set this to the name of the container in the
                                          # containerDefinitions section of your task definition

  aws-access-key-id: AKIA4KFLILHHA67QZDX5
  aws-secret-access-key: jQI5xTjS4zAvbAt4+aE6lsXRkT+ZfqIQF4gBWozn
  BUCKET_NAME: gitbac3 #gitactions2
  EB_APPNAME: ebgitapp3
  PACK_NAME: GitActionsAWSTest1-0.0.1-SNAPSHOT.jar

#permissions:
#  contents: read

jobs:
  bu_ild:
    runs-on: ubuntu-latest
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it1
      - uses: actions/checkout@v3

#      # Runs a single command using the runners shell
#      - name: === Run a one-line script
#        run: echo Hello, world!

#      # Runs a set of commands using the runners shell
#      - name: === Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
#          echo ----------------
#          echo github.workspace = ${{ github.workspace }}
#          echo github.run_number = ${{ github.run_number }}
#          echo ----------------
#          echo DOCKERHUB_USERNAME = ${{ secrets.DOCKERHUB_USERNAME }}
#          echo DOCKERHUB_TOKEN = ${{ secrets.DOCKERHUB_TOKEN }}
#          echo ----------------
#          ls ${{ github.workspace }}
#          echo ----------------


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.aws-access-key-id }}
          aws-secret-access-key: ${{ env.aws-secret-access-key }}
          aws-region: ${{ env.AWS_REGION }}

#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1


##############################################################################################
      - name: === Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11 #1.8

      - name: === mvn
        run: mvn package #-Dmaven.test.skip=true

##      - name: === Login to DockerHub Registry
##        run: echo 96c0ae44-9639-4728-8302-e1073a0fef12 | docker login -u softfavorite --password-stdin

#      - name: === aws delete all files from s3 bucket
#        run: aws s3 rm s3://${{ env.BUCKET_NAME }}/ --recursive # --exclude "*.jpg" --exclude "another/*"

      - name: === aws s3 delete bucket
        run: aws s3api delete-bucket --bucket ${{ env.BUCKET_NAME }} --force #–region ${{ env.AWS_REGION }}

      - name: === aws s3 create bucket
        run: aws s3 mb s3://${{ env.BUCKET_NAME }} #–region ${{ env.AWS_REGION }}


      - name: === aws s3
        run: aws s3 cp target/${{env.PACK_NAME}} s3://${{ env.BUCKET_NAME }}

      - name: === LS
        run: ls



  dep_loy:
    runs-on: ubuntu-latest
    needs: [bu_ild]
    steps:
      - name: === Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1

        with:
          aws-access-key-id: ${{ env.aws-access-key-id }}
          aws-secret-access-key: ${{ env.aws-secret-access-key }}
          aws-region: ${{ env.AWS_REGION }}


      - name: === create elastic_beanstalk application
        run : aws elasticbeanstalk create-application --application-name ${{ env.EB_APPNAME }} --description "my application1"


      - name: === create new elastic_beanstalk application version
        run : |
            aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPNAME }} \
            --source-bundle S3Bucket="${{ env.BUCKET_NAME }}",S3Key="${{env.PACK_NAME}}" \
            --version-label "Ver-${{ github.sha }}" \
            --description "Commit ${{ github.sha }}"

      - name: === deploy aws eb app to env
        run: aws elasticbeanstalk update-environment \
          --environment-name ebapp1-env \
          --version-label "Ver-${{ github.sha }}"


